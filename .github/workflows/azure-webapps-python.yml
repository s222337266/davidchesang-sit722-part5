# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.

name: Build and deploy Python app to Azure Web App

env:
  AZURE_WEBAPP_NAME: bookapp  
  PYTHON_VERSION: '3.8' 
  VERSION: ${{ github.sha }}
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}  
  REGISTRY_UN: ${{ secrets.REGISTRY_UN }}  
  REGISTRY_PW: ${{ secrets.REGISTRY_PW }}  
  RESOURCE_GROUP: davidrg1
  AKS_CLUSTER_NAME: bookapp
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
        # Set up Terraform CLI
      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1

      # Authenticate to Azure
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Terraform init to initialize the configuration
      - name: 'Terraform Init'
        run: |
          pwd
          ls -l
          terraform init
    
      # Terraform plan to show what resources will be created
      - name: 'Terraform'
        run: terraform plan

      # # Terraform apply to create resources
      # - name: 'Terraform Apply'
      #   run: terraform apply -auto-approve

      # - name: Get Container Registry URL
      #   id: acr_output
      #   run: |
      #     echo "CONTAINER_REGISTRY=$(terraform output -raw acr_login_server)" >> $GITHUB_ENV
      #     echo "REGISTRY_UN=$(terraform output -raw acr_admin_username)" >> $GITHUB_ENV
      #     echo "REGISTRY_PW=$(terraform output -raw acr_admin_password)" >> $GITHUB_ENV
        
  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set executable permissions for build script
        run: |
          echo "List directories"
          ls
          chmod +x scripts/build-image.sh
          chmod +x scripts/push-image.sh 
          chmod +x scripts/deploy.sh 
        
      - name: Build Docker images
        run: |
          ./scripts/build-image.sh
          ./scripts/push-image.sh

      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      - name: Deploy
        run: ./scripts/deploy.sh